name: "Run Script Every 0 Days"

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # 每周日的 0:00 AM 运行
  workflow_dispatch:

jobs:
  update-rule-set:
    name: "Update sing-box rule-set"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        
      - name: "download geosite"
        env:
          GEOSITE_URL: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/release/geosite.db"
        run: |
            set -Eeuo pipefail
            curl -JLO $GEOSITE_URL
        
      - name: "install sing-box"
        env:
          SING_BOX_DEB_URL: "https://github.com/SagerNet/sing-box/releases/download/v1.9.4/sing-box_1.9.4_linux_amd64.deb"
        run: |
            set -Eeuo pipefail
            wget -O sing-box.deb $SING_BOX_DEB_URL
            sudo dpkg -i sing-box.deb
            
      - name: "Setup python venv"
        run: |
            set -Eeuo pipefail
            python3 -m venv venv
            source venv/bin/activate
            pip3 install requests
            
      - name: "Update"
        run: |
            set -Eeuo pipefail
            source venv/bin/activate
            python3 test.py
            
      - name: "debug zone"
        run: |
            list=($(/usr/bin/sing-box geosite list | sed 's/ (.*)$//g'))
            mkdir -p geosite
            echo "切换到geosite目录:"
            cd geosite
            for ((i = 0; i < ${#list[@]}; i++)); do
            	/usr/bin/sing-box geosite export ${list[i]} -o ./geosite/${list[i]}.json
            	# ./sing-box rule-set compile ./geosite/${list[i]}.json -o ./geosite/${list[i]}.srs
            done
            echo "列出目录内文件:"
            ls
            echo "查看远程分支:"
            git fetch --prune
            echo "查看本地分支:"
            git branch -a
            # echo "删除远程分支:"
            # git push origin :branch_cat
            # git push origin :branch_out
            # echo "查看执行结果:"
            # git fetch --prune
            # git branch -a
            echo "本地根目录列表:"
            ls -halt
            echo "本地类输出列表:"
            cd d1
            ls -halt
            
      - name: "Commit and push to branch_cat"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            set -Eeuo pipefail
            cd d1
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git remote add origin https://github-action:$GITHUB_TOKEN@github.com/HiRules/sing-box-blacklist.git
            git add .
            git commit --allow-empty-message --no-edit
            git branch -M dev1
            git push -u origin dev1 --force
            
      - name: "Commit and push to branch_out"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            set -Eeuo pipefail
            cd d2
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git remote add origin https://github-action:$GITHUB_TOKEN@github.com/HiRules/sing-box-blacklist.git
            git add .
            git commit --allow-empty-message --no-edit
            git branch -M dev2
            git push -u origin dev2 --force
